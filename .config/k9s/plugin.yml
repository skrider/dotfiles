plugin:
  yank-name:
    shortCut: Ctrl-Y
    description: Yank name
    scopes:
    - all
    command: sh
    background: true
    args:
    - -c
    - "printf ${NAME} | xclip -selection clipboard"
  swoop-node:
    shortCut: g
    confirm: false
    description: swoop
    scopes:
    - node
    command: sh
    background: false
    args:
    - -c
    - |
      # 1: filename
      # 2: line number
      _preview () {
          bat "$1" \
              --plain \
              --color=always \
              --theme base16 \
              --style=numbers \
              --line-range $(python3 -c "print(max(int($2) - 15, 0))"):+500 \
              --highlight-line "$2"
      }
      export -f _preview
      
      temp=$(mktemp)
      kubectl get node $NAME -o yaml |
          tee $temp |
          nl -s':' |
          fzf --delimiter : --with-nth 2.. --preview "_preview $temp {1}" |
          sed -e 's/[^:]*:[^:]*:\s*//' |
          xclip -selection clipboard -i
  swoop:
    shortCut: g
    confirm: false
    description: swoop
    scopes:
    - all
    command: sh
    background: false
    args:
    - -c
    - |
      # 1: filename
      # 2: line number
      _preview () {
          bat "$1" \
              --plain \
              --color=always \
              --theme base16 \
              --style=numbers \
              --line-range $(python3 -c "print(max(int($2) - 15, 0))"):+500 \
              --highlight-line "$2"
      }
      export -f _preview
      
      temp=$(mktemp)
      kubectl get all --namespace $NAMESPACE -o yaml |
          yq '.items[] | select(.metadata.name == "$NAME")' |
          tee $temp |
          nl -s':' |
          fzf --delimiter : --with-nth 2.. --preview "_preview $temp {1}" |
          sed -e 's/[^:]*:[^:]*:\s*//' |
          xclip -selection clipboard -i
  ssh-node:
    shortCut: s
    confirm: false
    description: swoop
    scopes:
    - node
    command: sh
    background: false
    args:
    - -c
    - |
      export temp=$(mktemp)
      external_ip=$(kubectl get node $NAME -o yaml |
          tee $temp |
          yq '.status.addresses[] | select(.type == "ExternalIP") | .address')
      internal_ip=$(cat $temp | yq '.status.addresses[] | select(.type == "InternalIP") | .address')
      os=$(cat $temp | yq '.status.nodeInfo.osImage')
      if [[ $os =~ "Ubuntu" ]]; then
        ssh_user=ubuntu
      else
        ssh_user=ec2-user
      fi
      echo user: $ssh_user
      echo internal_ip: $internal_ip
      echo external_ip: $external_ip
      if [[ $KUBE_BASTION == "" ]]; then
        ssh $ssh_user@$external_ip
      else
        ssh -J $KUBE_BASTION $ssh_user@$internal_ip
      fi
  # See https://k9scli.io/topics/plugins/
  raw-logs-follow:
    shortCut: Ctrl-L
    description: logs -f
    scopes:
      - po
    command: kubectl
    background: false
    args:
      - logs
      - -f
      - $NAME
      - -n
      - $NAMESPACE
      - --context
      - $CONTEXT
  log-less:
    shortCut: Shift-L
    description: "logs|less"
    scopes:
      - po
    command: sh
    background: false
    args:
      - -c
      - kubectl logs $NAME -n $NAMESPACE --context $CONTEXT | less
  log-less-container:
    shortCut: Shift-L
    description: "logs|less"
    scopes:
      - containers
    command: sh
    background: false
    args:
      - -c
      - kubectl logs -c $NAME $POD -n $NAMESPACE --context $CONTEXT | less

